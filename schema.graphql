# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ConversationCreateInput {
  text: String!
}

type ConversationEntity {
  id: ID!
  text: String!
  date: Date!
  document: DocumentEntity!
  user: UserEntity!
}

input ConversationGetByIdInput {
  id: ID!
}

"""Date custom scalar type"""
scalar Date

input DocumentChangeInput {
  name: String
  dueDate: Date!
  priority: DocumentPriority
  status: DocumentStatus
  data: JSON
}

input DocumentCreateInput {
  name: String!
}

type DocumentEntity {
  id: ID!
  name: String!
  project: ProjectEntity!
  dueDate: Date!
  type: DocumentType!
  priority: DocumentPriority!
  status: DocumentStatus!
  user: UserEntity!
  data: JSON!
  conversations: [ConversationEntity!]!
}

input DocumentGetByIdInput {
  id: ID!
}

"""DocumentPriority custom scalar type"""
scalar DocumentPriority

"""DocumentStatus custom scalar type"""
scalar DocumentStatus

"""DocumentType custom scalar type"""
scalar DocumentType

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  register(input: UserInputRegister!): UserTokenResponse!
  createProject(input: ProjectCreateInput!): ProjectEntity!
  createDocument(input: DocumentCreateInput!, projectIdInput: ProjectGetByIdInput!): DocumentEntity!
  changeDocument(input: DocumentChangeInput!, getByIdInput: DocumentGetByIdInput!): DocumentEntity!
  createConversation(input: ConversationCreateInput!, documentIdInput: DocumentGetByIdInput!): ConversationEntity!
}

input ProjectCreateInput {
  name: String!
}

type ProjectEntity {
  id: ID!
  name: String!
  user: UserEntity!
  invitedUsers: [UserEntity!]!
  documents: [DocumentEntity!]!
}

input ProjectGetByIdInput {
  id: ID!
}

type Query {
  me: UserEntity!
  login(input: UserInputLogin!): UserTokenResponse!
  getProject(input: ProjectGetByIdInput!): ProjectEntity!
  getProjects: [ProjectEntity!]!
  getDocument(input: DocumentGetByIdInput!): DocumentEntity!
  getDocuments: [DocumentEntity!]!
  getConversation(input: ConversationGetByIdInput!): ConversationEntity!
  getConversations(documentIdInput: DocumentGetByIdInput!): [ConversationEntity!]!
}

type Subscription {
  projectCreated: ProjectEntity!
  documentCreated: DocumentEntity!
  documentChanged: DocumentEntity!
  conversationCreated: ConversationEntity!
}

type UserEntity {
  id: ID!
  email: String!
  isEmailConfirmed: Boolean!
  registeredDate: Date!
  projects: [ProjectEntity!]!
  invitedToProjects: [ProjectEntity!]!
  conversations: [ConversationEntity!]!
}

input UserInputLogin {
  email: String!
  password: String!
}

input UserInputRegister {
  email: String!
  password: String!
}

type UserTokenResponse {
  token: String!
}
