# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ConversationCreateInput {
  text: String!
}

type ConversationEntity {
  id: ID!
  text: String!
  date: Date!
  user: UserEntity!
}

"""Date custom scalar type"""
scalar Date

input DocumentChangeInput {
  name: String
  dueDate: Date
  priority: DocumentPriority
  status: DocumentStatus
  data: JSON
}

input DocumentCreateInput {
  name: String!
}

type DocumentEntity {
  id: ID!
  name: String!
  project: ProjectEntity!
  dueDate: Date!
  type: DocumentType!
  priority: DocumentPriority!
  status: DocumentStatus!
  user: UserEntity!
  data: JSON!
}

"""DocumentPriority custom scalar type"""
scalar DocumentPriority

"""DocumentStatus custom scalar type"""
scalar DocumentStatus

"""DocumentType custom scalar type"""
scalar DocumentType

input InviteCreateInput {
  invitedUserEmail: String!
}

type InviteEntity {
  id: ID!
  active: Boolean!
  date: Date!
  invitedByUser: UserEntity!
  invitedUser: UserEntity!
  project: ProjectEntity!
  invitedUserEmail: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  register(input: UserInputRegister!): UserTokenResponse!
  createProject(input: ProjectCreateInput!): ProjectEntity!
  changeProject(input: ProjectChangeInput!, projectId: String!): ProjectEntity!
  addImage(image: Upload!): String!
  createDocument(input: DocumentCreateInput!, projectId: String!): DocumentEntity!
  changeDocument(input: DocumentChangeInput!, documentId: String!): DocumentEntity!
  createConversation(input: ConversationCreateInput!, documentId: String!): ConversationEntity!
  createInvite(input: InviteCreateInput!, projectId: String!): InviteEntity!
}

input ProjectChangeAvatarInput {
  avatar: String!
}

input ProjectChangeInput {
  name: String!
}

input ProjectCreateInput {
  name: String!
}

type ProjectEntity {
  id: ID!
  avatar: String!
  name: String!
  user: UserEntity!
}

type Query {
  getMe: UserEntity!
  login(input: UserInputLogin!): UserTokenResponse!
  getProject(projectId: String!): ProjectEntity!
  getProjects: [ProjectEntity!]!
  getDocument(documentId: String!): DocumentEntity!
  getDocuments(projectId: String!): [DocumentEntity!]!
  getConversation(conversationId: String!): ConversationEntity!
  getConversations(documentId: String!): [ConversationEntity!]!
  getTimeline(timelineId: String!): TimelineEntity!
  getTimelines(documentId: String!): [TimelineEntity!]!
}

type Subscription {
  projectCreated: ProjectEntity!
  projectChanged: ProjectEntity!
  documentCreated: DocumentEntity!
  documentChanged: DocumentEntity!
  conversationCreated: ConversationEntity!
  timelineCreated: TimelineEntity!
}

type TimelineEntity {
  id: ID!
  date: Date!
  eventName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserEntity {
  id: ID!
  email: String!
  nickname: String!
  isEmailConfirmed: Boolean!
  registeredDate: Date!
}

input UserInputLogin {
  email: String!
  password: String!
}

input UserInputRegister {
  email: String!
  password: String!
}

type UserTokenResponse {
  token: String!
}
